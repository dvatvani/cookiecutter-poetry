default:
  @just --list --unsorted

# Initial setup of project, without any commit to GitHub
setup-project-no-github:
    @git init -b main
    @git add .
    @git commit -m "Initial commit"
    @just install

# Initial setup of project, including an initial push to GitHub
setup-project: setup-project-no-github
    @git remote add origin git@github.com:{{cookiecutter.author_github_handle}}/{{cookiecutter.project_name}}.git
    @git push -u origin main
    
# Install the poetry environment and install the pre-commit hooks
install:
	@echo "ðŸš€ Creating virtual environment using pyenv and poetry"
	@poetry env use python
	@poetry install
	@poetry run pre-commit install

# Run code quality tools.
check:
	@echo "ðŸš€ Checking Poetry lock file consistency with 'pyproject.toml'"
	@poetry check --lock
	@echo "ðŸš€ Linting code: Running pre-commit"
	@poetry run pre-commit run -a
	@echo "ðŸš€ Static type checking: Running mypy"
	@poetry run mypy
{%- if cookiecutter.deptry == 'y' %}
	@echo "ðŸš€ Checking for obsolete dependencies: Running deptry"
	@poetry run deptry .
{%- endif %}

# Test the code with pytest
test:
	@echo "ðŸš€ Testing code: Running pytest"
{%- if cookiecutter.codecov == "y"%}
	@poetry run pytest --cov --cov-config=pyproject.toml --cov-report=xml
{%- else %}
	@poetry run pytest --doctest-modules
{%- endif%}

# Build wheel file using poetry
build: clean-build
	@echo "ðŸš€ Creating wheel file"
	@poetry build

# clean build artifacts
clean-build:
	@rm -rf dist

{%- if cookiecutter.publish_to == "pypi"%}

# publish a release to pypi.
publish:
	@echo "ðŸš€ Publishing: Dry run."
	@poetry config pypi-token.pypi $(PYPI_TOKEN)
	@poetry publish --dry-run
	@echo "ðŸš€ Publishing."
	@poetry publish

# Build and publish.
build-and-publish: build publish
{%- elif cookiecutter.publish_to == "artifactory" %}


# Publish to the Artifactory repository using poetry. Requires ARTIFACTORY_TOKEN to be set.
publish:
	@echo "ðŸš€ Publishing: Dry run."
	@poetry config repositories.artifactory $(ARTIFACTORY_URL)
	@poetry publish --repository artifactory --username $(ARTIFACTORY_USERNAME) --password $(ARTIFACTORY_PASSWORD) --dry-run
	@echo "ðŸš€ Publishing."
	@poetry publish --repository artifactory --username $(ARTIFACTORY_USERNAME) --password $(ARTIFACTORY_PASSWORD)


# Build and publish.
build-and-publish: build publish
{%- endif%}

{%- if cookiecutter.mkdocs == "y" %}

# Test if documentation can be built without warnings or errors
docs-test:
	@poetry run mkdocs build -s

# Build and serve the documentation
docs:
	@poetry run mkdocs serve

{%- endif %}